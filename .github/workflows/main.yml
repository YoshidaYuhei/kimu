name: Main Branch CI

on:
  push:
    branches:
      - main
    paths:
      - 'apps/mobile/**'
      - '.github/workflows/main.yml'

jobs:
  mobile-build-and-test:
    name: Mobile App Build & Test
    runs-on: macos-latest
    defaults:
      run:
        working-directory: apps/mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/mobile/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check coverage threshold
        run: |
          echo "Checking if coverage meets 80% threshold..."
          npm run test:coverage 2>&1 | tee coverage-output.txt
          if grep -q "Jest: \"global\" coverage threshold" coverage-output.txt; then
            echo "❌ Coverage threshold not met!"
            exit 1
          fi
          echo "✅ Coverage threshold met!"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: apps/mobile/ios

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Install xcpretty
        run: gem install xcpretty

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild \
            -workspace kimu.xcworkspace \
            -scheme kimu \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
            build \
            CODE_SIGNING_ALLOWED=NO \
            | xcpretty

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-build-logs
          path: |
            apps/mobile/ios/build/Build/Products/
            apps/mobile/coverage/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./apps/mobile/coverage/coverage-final.json
          flags: mobile
          name: mobile-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  notification:
    name: Send notifications
    needs: mobile-build-and-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.mobile-build-and-test.result }}" == "success" ]; then
            echo "✅ Build succeeded!"
          else
            echo "❌ Build failed!"
            exit 1
          fi
